// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proiectul_meu.Data;

#nullable disable

namespace Proiectulmeu.Migrations
{
    [DbContext(typeof(Contextul))]
    partial class ContextulModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Proiectul_meu.Models.Bluza", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Culoare")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descriere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Hoodie")
                        .HasColumnType("bit");

                    b.Property<string>("Marime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Pret")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Bluze");
                });

            modelBuilder.Entity("Proiectul_meu.Models.Incaltaminte", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Culoare")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descriere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DinPiele")
                        .HasColumnType("bit");

                    b.Property<string>("Marime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Pantofi")
                        .HasColumnType("bit");

                    b.Property<double>("Pret")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Incaltari");
                });

            modelBuilder.Entity("Proiectul_meu.Models.Pantaloni", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Culoare")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descriere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Pret")
                        .HasColumnType("float");

                    b.Property<bool>("scurti")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Pantaloni");
                });

            modelBuilder.Entity("Proiectul_meu.Models.Sosete", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Culoare")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descriere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Diferite")
                        .HasColumnType("bit");

                    b.Property<string>("Marime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Pret")
                        .HasColumnType("float");

                    b.Property<bool>("Scurte")
                        .HasColumnType("bit");

                    b.Property<Guid>("TreningId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TreningId");

                    b.ToTable("Sosete");
                });

            modelBuilder.Entity("Proiectul_meu.Models.Trening", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BluzaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PantaloniId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BluzaId");

                    b.HasIndex("PantaloniId");

                    b.ToTable("Treninguri");
                });

            modelBuilder.Entity("Proiectul_meu.Models.Tricou", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Culoare")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descriere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Pret")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Tricouri");
                });

            modelBuilder.Entity("Proiectul_meu.Models.TricouLaTrening", b =>
                {
                    b.Property<Guid>("TreningID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TricouID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TricouID");

                    b.ToTable("TricouriLaTrening");
                });

            modelBuilder.Entity("Proiectul_meu.Models.Sosete", b =>
                {
                    b.HasOne("Proiectul_meu.Models.Trening", "Trening")
                        .WithMany("Sosete")
                        .HasForeignKey("TreningId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trening");
                });

            modelBuilder.Entity("Proiectul_meu.Models.Trening", b =>
                {
                    b.HasOne("Proiectul_meu.Models.Bluza", "Bluza")
                        .WithMany()
                        .HasForeignKey("BluzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proiectul_meu.Models.Pantaloni", "Pantaloni")
                        .WithMany()
                        .HasForeignKey("PantaloniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bluza");

                    b.Navigation("Pantaloni");
                });

            modelBuilder.Entity("Proiectul_meu.Models.TricouLaTrening", b =>
                {
                    b.HasOne("Proiectul_meu.Models.Trening", "Trening")
                        .WithMany("Tricouri")
                        .HasForeignKey("TreningID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proiectul_meu.Models.Tricou", "Tricou")
                        .WithMany("TricouLaTreninguri")
                        .HasForeignKey("TricouID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trening");

                    b.Navigation("Tricou");
                });

            modelBuilder.Entity("Proiectul_meu.Models.Trening", b =>
                {
                    b.Navigation("Sosete");

                    b.Navigation("Tricouri");
                });

            modelBuilder.Entity("Proiectul_meu.Models.Tricou", b =>
                {
                    b.Navigation("TricouLaTreninguri");
                });
#pragma warning restore 612, 618
        }
    }
}
